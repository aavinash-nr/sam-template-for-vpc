AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS CloudFormation template to create a VPC with public and private subnets,
  an Internet Gateway, and a NAT Gateway, using dynamic Availability Zones.
Resources:
  CustomTestVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 18.0.0.0/20
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: custom-test-vpc
    Metadata:
      SamResourceId: CustomTestVPC
  PublicSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: CustomTestVPC
      CidrBlock: 18.0.0.0/23
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs: ''
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: public-subnet-one
    Metadata:
      SamResourceId: PublicSubnetOne
  PrivateSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: CustomTestVPC
      CidrBlock: 18.0.2.0/23
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs: ''
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value: private-subnet-one
    Metadata:
      SamResourceId: PrivateSubnetOne
  PublicSubnetTwo:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: CustomTestVPC
      CidrBlock: 18.0.4.0/23
      AvailabilityZone:
        Fn::Select:
        - 1
        - Fn::GetAZs: ''
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: public-subnet-two
    Metadata:
      SamResourceId: PublicSubnetTwo
  PrivateSubnetTwo:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: CustomTestVPC
      CidrBlock: 18.0.6.0/23
      AvailabilityZone:
        Fn::Select:
        - 1
        - Fn::GetAZs: ''
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value: private-subnet-two
    Metadata:
      SamResourceId: PrivateSubnetTwo
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: custom-igw
    Metadata:
      SamResourceId: InternetGateway
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: CustomTestVPC
      InternetGatewayId:
        Ref: InternetGateway
    Metadata:
      SamResourceId: AttachGateway
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: CustomTestVPC
      Tags:
      - Key: Name
        Value: public-route-table
    Metadata:
      SamResourceId: PublicRouteTable
  PublicDefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId:
        Ref: InternetGateway
    Metadata:
      SamResourceId: PublicDefaultRoute
  PublicSubnetOneRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnetOne
      RouteTableId:
        Ref: PublicRouteTable
    Metadata:
      SamResourceId: PublicSubnetOneRouteTableAssociation
  PublicSubnetTwoRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnetTwo
      RouteTableId:
        Ref: PublicRouteTable
    Metadata:
      SamResourceId: PublicSubnetTwoRouteTableAssociation
  NatGatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
      - Key: Name
        Value: nat-gateway-eip
    Metadata:
      SamResourceId: NatGatewayEIP
  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - NatGatewayEIP
        - AllocationId
      SubnetId:
        Ref: PublicSubnetOne
      Tags:
      - Key: Name
        Value: custom-nat-gw
    DependsOn:
    - AttachGateway
    - PublicDefaultRoute
    Metadata:
      SamResourceId: NatGateway
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: CustomTestVPC
      Tags:
      - Key: Name
        Value: private-route-table
    Metadata:
      SamResourceId: PrivateRouteTable
  PrivateDefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId:
        Ref: NatGateway
    Metadata:
      SamResourceId: PrivateDefaultRoute
  PrivateSubnetOneRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnetOne
      RouteTableId:
        Ref: PrivateRouteTable
    Metadata:
      SamResourceId: PrivateSubnetOneRouteTableAssociation
  PrivateSubnetTwoRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnetTwo
      RouteTableId:
        Ref: PrivateRouteTable
    Metadata:
      SamResourceId: PrivateSubnetTwoRouteTableAssociation
Outputs:
  VPCId:
    Description: ID of the created VPC
    Value:
      Ref: CustomTestVPC
  PublicSubnetOneId:
    Description: ID of Public Subnet One
    Value:
      Ref: PublicSubnetOne
  PublicSubnetOneAZ:
    Description: Availability Zone of Public Subnet One
    Value:
      Fn::GetAtt:
      - PublicSubnetOne
      - AvailabilityZone
  PublicSubnetTwoId:
    Description: ID of Public Subnet Two
    Value:
      Ref: PublicSubnetTwo
  PublicSubnetTwoAZ:
    Description: Availability Zone of Public Subnet Two
    Value:
      Fn::GetAtt:
      - PublicSubnetTwo
      - AvailabilityZone
  PrivateSubnetOneId:
    Description: ID of Private Subnet One
    Value:
      Ref: PrivateSubnetOne
  PrivateSubnetTwoId:
    Description: ID of Private Subnet Two
    Value:
      Ref: PrivateSubnetTwo
  NatGatewayEIPAddress:
    Description: Public IP address of the NAT Gateway
    Value:
      Ref: NatGatewayEIP
